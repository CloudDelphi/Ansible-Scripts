#!/bin/sh
#
# A post-up/down hook to automatically create/delete a 'sec' VLAN
# device, and a dedicated, host-scoped, IP for IPSec (v4 only).
#
# Copyright 2013 Guilhem Moulin <guilhem@fripost.org>
#
# Licensed under the GNU GPL version 3 or higher.
#

set -ue
PATH=/usr/sbin:/usr/bin:/sbin:/bin

ifsec=sec0
ipsec=172.16.0.1/32

# /!\ This mark much match that in /usr/local/sbin/update-firewall.sh.
secmark=0xA99

# Ignore the loopback interface and non inet4 families.
[ "$IFACE" != lo -a "$ADDRFAM" = inet ] || exit 0

# Only the device with the default, globally-scoped route, is of
# interest here.
[ "$( /bin/ip -4 route show to default scope global \
    | sed -nr '/^default via \S+ dev (\S+).*/ {s//\1/p;q}' )" \
  = \
  "$IFACE" ] || exit 0

case "$MODE" in
    start) # Don't create $ifsec if it's already there
           if ! /bin/ip -o link show | grep -qE "^[0-9]+:\s+$ifsec"; then
               # Create a new VLAN $IFACE on physical device $ifsec. This is
               # required otherwise charon thinks the left peer is that
               # host-scoped, non-routable IP.
               /bin/ip link    add link "$IFACE" name "$ifsec" type vlan id 2713
               /bin/ip address add "$ipsec" dev "$ifsec" scope host
               /bin/ip link    set dev "$ifsec" up
           fi

           # If a packet retained its mark that far, it means it has
           # been SNAT'ed from $ipsec, and didn't have a xfrm
           # association.  Hence we nullroute it to avoid leaking data.
           /bin/ip rule  add fwmark "$secmark" table 666 priority 666 || true
           /bin/ip route add prohibit default  table 666              || true
    ;;
    stop)  if /bin/ip -o link show | grep -qE "^[0-9]+:\s+$ifsec"; then
               # Deactivate the VLAN
               /bin/ip link set dev "$ifsec" down
           fi

           # Delete the 'prohibit' rule
           /bin/ip rule  del fwmark "$secmark" table 666 priority 666 || true
           /bin/ip route flush table 666
    ;;
esac
